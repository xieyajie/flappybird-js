require=function i(t,e,r){function o(s,n){if(!e[s]){if(!t[s]){var a="function"==typeof require&&require;if(!n&&a)return a(s,!0);if(l)return l(s,!0);var h=new Error("Cannot find module '"+s+"'");throw h.code="MODULE_NOT_FOUND",h}var d=e[s]={exports:{}};t[s][0].call(d.exports,function(i){var e=t[s][1][i];return o(e?e:i)},d,d.exports,i,t,e,r)}return e[s].exports}for(var l="function"==typeof require&&require,s=0;s<r.length;s++)o(r[s]);return o}({BirdCollision:[function(i,t,e){"use strict";cc._RFpush(t,"480d61GWTdMMaFhZexSRiJO","BirdCollision"),cc.Class({"extends":cc.Component,properties:{},onLoad:function(){var i=cc.director.getCollisionManager();i.enabled=!0},onCollisionEnter:function(i,t){"Pillar"==i.node.group&&this.node.dispatchEvent(new cc.Event.EventCustom("collided",(!0)))},onCollisionExit:function(i,t){"ScoreSpace"==i.node.group&&this.node.dispatchEvent(new cc.Event.EventCustom("score",(!0)))}}),cc._RFpop()},{}],PillarGenerator:[function(i,t,e){"use strict";cc._RFpush(t,"fec57h7ZKBEWbtIDVOxFXA9","PillarGenerator"),cc.Class({"extends":cc.Component,properties:{pillarPrefab:{"default":null,type:cc.Prefab,tooltip:"柱子障碍物的 Prefab"},scroreSpacePrefab:{"default":null,type:cc.Prefab,tooltip:"柱子障碍物中间的空隙 prefab"},scoreLabel:{"default":null,type:cc.Label,tooltip:"显示分数的 label 组件"},score:{"default":0,visible:!1,tooltip:"玩家分数"},pillarSapce:{"default":0,tooltip:"上下障碍物的中间空隙间距"},pillarMinHeight:{"default":0,tooltip:"上下预留给障碍物的最小高度"},pillarMoveSpeed:{"default":0,tooltip:"障碍物的移动速度"},pillarGenerateMargin:{"default":0,tooltip:"间隔多远生成一次障碍物"},pillars:{"default":[],visible:!1,tooltip:"记录所有障碍物的数组"},lastPillarGenerateMargin:{"default":0,visible:!1,tooltip:"距离上一次生成障碍物间隔了多远了"},birdPrefab:{"default":null,type:cc.Prefab,tooltip:"小鸟的 Prefab"},bird:{"default":null,visible:!1,tooltip:"运行时生成的，当前在画面中的鸟"},birdUpSpeed:{"default":0,tooltip:"点击屏幕时，鸟获得的上升速度"},birdSpeed:{"default":0,visible:!1,tooltip:"鸟当前在 y 方向上的速度"},birdGravitationalAcceleration:{"default":0,tooltip:"鸟下降的重力加速度"},isCollided:{"default":!1,visible:!1,tooltip:"是否发生了碰撞"}},onLoad:function(){this.setupEventListener(),this.setupCollisionListener(),this.setupBird(),this.setupPillars()},update:function(i){if(!this.isCollided){for(var t=i*this.pillarMoveSpeed,e=0;e<this.pillars.length;e++){var r=this.pillars[e],o=r[0],l=r[1],s=r[2];o.x-=t,l.x-=t,s.x-=t}if(this.lastPillarGenerateMargin+=t,this.lastPillarGenerateMargin>=this.pillarGenerateMargin){var n=this.node.width/2+this.pillars[0][0].width/2;this.generateTwoPillar(n),this.lastPillarGenerateMargin=0}for(var e=0;e<this.pillars.length;e++){var r=this.pillars[e],o=r[0],l=r[1],s=r[2],a=-this.node.width/2-o.width/2;o.x<a&&(this.pillars.shift(),o.removeFromParent(),l.removeFromParent(),s.removeFromParent())}var h=this.birdSpeed-this.birdGravitationalAcceleration*i;this.birdSpeed=h;var d=i*this.birdSpeed;this.bird.rotation=-20*(h/this.birdUpSpeed);var p=this.bird.getPositionY()+d;this.bird.setPositionY(p)}},setupPillars:function(){var i=cc.instantiate(this.pillarPrefab),t=this.node.width/2+i.width/2;this.generateTwoPillar(t),this.lastPillarGenerateMargin=0},restartGame:function(){for(var i=0;i<this.pillars.length;i++){var t=this.pillars[i],e=t[0],r=t[1],o=t[2];e.removeFromParent(),r.removeFromParent(),o.removeFromParent()}this.pillars=[],this.bird.removeFromParent(),this.score=0,this.scoreLabel.string=this.score.toString(),this.setupPillars(),this.setupBird(),this.isCollided=!1},generateTwoPillar:function(i){var t=cc.instantiate(this.pillarPrefab).width,e=this.node.height-2*this.pillarMinHeight-this.pillarSapce,r=Math.random()*e-e/2,o=r+this.pillarSapce/2,l=this.node.height/2-o,s=o+l/2,n=this.generateAPillar(i,s,t,l,0),a=r-this.pillarSapce/2,h=this.node.height/2+o,d=a-h/2,p=this.generateAPillar(i,d,t,h,180),c=cc.instantiate(this.scroreSpacePrefab);this.node.addChild(c),c.width=t,c.height=o-a,c.setPositionX(i),c.setPositionY(a+c.height/2);var u=c.getComponent(cc.BoxCollider);u.size.width=c.width,u.size.height=c.height,u.offset.x=0,u.offset.y=0,this.pillars.push([n,p,c])},generateAPillar:function(i,t,e,r,o){var l=cc.instantiate(this.pillarPrefab);this.node.addChild(l),l.rotation=o,l.width=e,l.height=r,l.setPositionX(i),l.setPositionY(t);var s=l.getComponent(cc.BoxCollider);return s.size.width=l.width,s.size.height=l.height,s.offset.x=0,s.offset.y=0,l},setupBird:function(){this.bird=cc.instantiate(this.birdPrefab);var i=-200,t=0;this.bird.setPositionX(i),this.bird.setPositionY(t),this.node.addChild(this.bird)},setupEventListener:function(){this.node.on(cc.Node.EventType.TOUCH_START,function(i){return this.isCollided?void this.restartGame():(this.birdSpeed=this.birdUpSpeed,void(this.bird.rotation=-20))},this)},setupCollisionListener:function(){this.node.on("collided",function(i){this.getComponent("PillarGenerator").isCollided=!0}),this.node.on("score",function(i){var t=this.getComponent("PillarGenerator");t.score++,t.scoreLabel.string=t.score.toString()})}}),cc._RFpop()},{}]},{},["BirdCollision","PillarGenerator"]);
//# sourceMappingURL=project.js.map