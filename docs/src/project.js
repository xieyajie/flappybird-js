require=function t(i,e,r){function o(s,l){if(!e[s]){if(!i[s]){var n="function"==typeof require&&require;if(!l&&n)return n(s,!0);if(a)return a(s,!0);var h=new Error("Cannot find module '"+s+"'");throw h.code="MODULE_NOT_FOUND",h}var d=e[s]={exports:{}};i[s][0].call(d.exports,function(t){var e=i[s][1][t];return o(e?e:t)},d,d.exports,t,i,e,r)}return e[s].exports}for(var a="function"==typeof require&&require,s=0;s<r.length;s++)o(r[s]);return o}({BirdCollision:[function(t,i,e){"use strict";cc._RFpush(i,"480d61GWTdMMaFhZexSRiJO","BirdCollision"),cc.Class({"extends":cc.Component,properties:{},onLoad:function(){var t=cc.director.getCollisionManager();t.enabled=!0},onCollisionEnter:function(t,i){"Pillar"==t.node.group&&this.node.dispatchEvent(new cc.Event.EventCustom("collided",(!0)))},onCollisionExit:function(t,i){"ScoreSpace"==t.node.group&&this.node.dispatchEvent(new cc.Event.EventCustom("score",(!0)))}}),cc._RFpop()},{}],PillarGenerator:[function(t,i,e){"use strict";cc._RFpush(i,"fec57h7ZKBEWbtIDVOxFXA9","PillarGenerator"),cc.Class({"extends":cc.Component,properties:{pillarPrefab:{"default":null,type:cc.Prefab,tooltip:"柱子障碍物的 Prefab"},scroreSpacePrefab:{"default":null,type:cc.Prefab,tooltip:"柱子障碍物中间的空隙 prefab"},scoreLabel:{"default":null,type:cc.Label,tooltip:"显示分数的 label 组件"},score:{"default":0,visible:!1,tooltip:"玩家分数"},pillarSapce:{"default":0,tooltip:"上下障碍物的中间空隙间距"},pillarMinHeight:{"default":0,tooltip:"上下预留给障碍物的最小高度"},pillarMoveSpeed:{"default":0,tooltip:"障碍物的移动速度"},pillarGenerateMargin:{"default":0,tooltip:"间隔多远生成一次障碍物"},pillars:{"default":[],visible:!1,tooltip:"记录所有障碍物的数组"},lastPillarGenerateMargin:{"default":0,visible:!1,tooltip:"距离上一次生成障碍物间隔了多远了"},birdPrefab:{"default":null,type:cc.Prefab,tooltip:"小鸟的 Prefab"},bird:{"default":null,visible:!1,tooltip:"运行时生成的，当前在画面中的鸟"},birdUpSpeed:{"default":0,tooltip:"点击屏幕时，鸟获得的上升速度"},birdSpeed:{"default":0,visible:!1,tooltip:"鸟当前在 y 方向上的速度"},birdGravitationalAcceleration:{"default":0,tooltip:"鸟下降的重力加速度"},isCollided:{"default":!1,visible:!1,tooltip:"是否发生了碰撞"},startLayer:{"default":null,type:cc.Node,tooltip:"开始游戏视图"}},onLoad:function(){this.setupEventListener(),this.setupCollisionListener(),this.setupStartLayer(),this.setupBird(),this.setupPillars(),this.showStartLayer()},update:function(t){if(!this.isCollided){for(var i=t*this.pillarMoveSpeed,e=0;e<this.pillars.length;e++){var r=this.pillars[e],o=r[0],a=r[1],s=r[2];o.x-=i,a.x-=i,s.x-=i}if(this.lastPillarGenerateMargin+=i,this.lastPillarGenerateMargin>=this.pillarGenerateMargin){var l=this.node.width/2+this.pillars[0][0].width/2;this.generateTwoPillar(l),this.lastPillarGenerateMargin=0}for(var e=0;e<this.pillars.length;e++){var r=this.pillars[e],o=r[0],a=r[1],s=r[2],n=-this.node.width/2-o.width/2;o.x<n&&(this.pillars.shift(),o.removeFromParent(),a.removeFromParent(),s.removeFromParent())}var h=this.birdSpeed-this.birdGravitationalAcceleration*t;this.birdSpeed=h;var d=t*this.birdSpeed;this.bird.rotation=-20*(h/this.birdUpSpeed);var p=this.bird.getPositionY()+d;this.bird.setPositionY(p)}},setupStartLayer:function(){this.startLayer.removeFromParent()},showStartLayer:function(){this.isCollided=!0,this.startLayer.removeFromParent();var t=this.node.parent;t.addChild(this.startLayer),this.startLayer.width=t.width,this.startLayer.height=t.height,this.startLayer.setPositionX(0),this.startLayer.setPositionY(0)},setupPillars:function(){var t=cc.instantiate(this.pillarPrefab),i=this.node.width/2+t.width/2;this.generateTwoPillar(i),this.lastPillarGenerateMargin=0},restartGame:function(){for(var t=0;t<this.pillars.length;t++){var i=this.pillars[t],e=i[0],r=i[1],o=i[2];e.removeFromParent(),r.removeFromParent(),o.removeFromParent()}this.pillars=[],this.bird.removeFromParent(),this.score=0,this.scoreLabel.string=this.score.toString(),this.setupPillars(),this.setupBird(),this.startLayer.removeFromParent(),this.isCollided=!1},generateTwoPillar:function(t){var i=cc.instantiate(this.pillarPrefab).width,e=this.node.height-2*this.pillarMinHeight-this.pillarSapce,r=Math.random()*e-e/2,o=r+this.pillarSapce/2,a=this.node.height/2-o,s=o+a/2,l=this.generateAPillar(t,s,i,a,0),n=r-this.pillarSapce/2,h=this.node.height/2+o,d=n-h/2,p=this.generateAPillar(t,d,i,h,180),c=cc.instantiate(this.scroreSpacePrefab);this.node.addChild(c),c.width=i,c.height=o-n,c.setPositionX(t),c.setPositionY(n+c.height/2);var u=c.getComponent(cc.BoxCollider);u.size.width=c.width,u.size.height=c.height,u.offset.x=0,u.offset.y=0,this.pillars.push([l,p,c])},generateAPillar:function(t,i,e,r,o){var a=cc.instantiate(this.pillarPrefab);this.node.addChild(a),a.rotation=o,a.width=e,a.height=r,a.setPositionX(t),a.setPositionY(i);var s=a.getComponent(cc.BoxCollider);return s.size.width=a.width,s.size.height=a.height,s.offset.x=0,s.offset.y=0,a},setupBird:function(){this.bird=cc.instantiate(this.birdPrefab);var t=-200,i=0;this.bird.setPositionX(t),this.bird.setPositionY(i),this.node.addChild(this.bird),this.birdSpeed=this.birdUpSpeed},setupEventListener:function(){this.node.on(cc.Node.EventType.TOUCH_START,function(t){return this.startLayer.parent?void this.restartGame():(this.birdSpeed=this.birdUpSpeed,void(this.bird.rotation=-20))},this)},setupCollisionListener:function(){this.node.on("collided",function(t){var i=this.getComponent("PillarGenerator");i.isCollided=!0,i.showStartLayer()}),this.node.on("score",function(t){var i=this.getComponent("PillarGenerator");i.score++,i.scoreLabel.string=i.score.toString()})}}),cc._RFpop()},{}]},{},["BirdCollision","PillarGenerator"]);
//# sourceMappingURL=project.js.map